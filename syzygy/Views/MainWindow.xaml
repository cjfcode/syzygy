<Window x:Class="Syzygy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Syzygy"
        xmlns:controls="clr-namespace:Syzygy.Controls"
        mc:Ignorable="d"
        x:Name="syzygy_mainwindow"
        Title="syzygy"
        Height="700"
        Width="1024"
        MinHeight="40"
        MinWidth="200"
        Background="{StaticResource MainBackgroundBrush}"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        Loaded="MainWindow_Loaded"
        Tag="Inflate"
        >
    
    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>
    
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CanExecute" Executed="CloseWindow" />
        <CommandBinding Command="{x:Static SystemCommands.MaximizeWindowCommand}" CanExecute="CanExecute" Executed="MaximizeWindow" />
        <CommandBinding Command="{x:Static SystemCommands.MinimizeWindowCommand}" CanExecute="CanExecute" Executed="MinimizeWindow" />
    </Window.CommandBindings>

    <Border>
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Setter Property="BorderThickness" Value="1"/>
                <Style.Triggers>
                    <!-- Set border size to 0 if window is maximized, this prevents the border from showing when the window is maximized using MINMAXINFO. -->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Path=WindowState}" Value="Maximized">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Margin" Value="{Binding MaximizeFix, Mode=OneWay}" />
                    </DataTrigger>
                 
                    <!--Active window border color-->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Path=IsActive}" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource WindowBorderBrush}" />
                    </DataTrigger>

                    <!--Inactive window border color-->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}, Path=IsActive}" Value="False">
                        <Setter Property="BorderBrush" Value="{StaticResource InactiveWindowBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <!-- Outer Grid-->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <!-- caption -->
                <RowDefinition Height="auto" />
                <!-- caption shadow -->
                <RowDefinition Height="auto" />
                <!-- 40px menu bar, remove if we decide to go a different direction with the UI design -->
                <RowDefinition Height="auto" />
                <RowDefinition Height="593*" />
                <!--<RowDefinition Height="19*"/>-->
            </Grid.RowDefinitions>

            <!-- Title Bar -->
            <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Height="38" VerticalAlignment="Top" Background="{StaticResource MainBackgroundBrush}" Panel.ZIndex="1">

                <!-- Hamburger Menu button, change to program icon? -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                    <ToggleButton x:Name="HamburgerMenu" Style="{StaticResource HamburgerMenuButton}" IsChecked="{Binding IsPopupOpen, Mode=TwoWay}" FontFamily="{StaticResource Segoe MDL2 Assets}" FontSize="16" Content="&#xE700;"/>
                    
                    <Popup x:Name="HamburgerMenuPopup" IsOpen="{Binding IsPopupOpen, Mode=TwoWay}" AllowsTransparency="True" PopupAnimation="Fade" StaysOpen="False">
                        
                         <!--Popup Content--> 
                        <Border BorderThickness="1" BorderBrush="{StaticResource WindowBorderBrush}">
                            <Grid Background="{StaticResource MainBackgroundBrush}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                    <RowDefinition Height="auto" />
                                </Grid.RowDefinitions>

                                <Button Grid.Row="0" Style="{StaticResource PopupMenuButton}" Content="Add Game" Command="{Binding AddGameMenuItemClick}" />
                                <Button Grid.Row="1" Style="{StaticResource PopupMenuButton}" Content="Settings" Command="{Binding SettingsMenuItemClick}"/>
                                <Button Grid.Row="2" Style="{StaticResource PopupMenuButton}" Content="About" Command="{Binding AboutMenuItemClick}" />
                                <Button Grid.Row="3" Style="{StaticResource PopupMenuButton}" Content="Quit" Command="{Binding QuitMenuItemClick}" />
                            </Grid>
                        </Border>
                        
                    </Popup>
                </StackPanel>

                <!-- Window Buttons -->
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Command="{x:Static SystemCommands.MinimizeWindowCommand}" Style="{StaticResource WindowChromeButton}" FontFamily="{StaticResource Segoe MDL2 Assets}" FontSize="11" Content="&#xE921;" />
                    <Button Command="{x:Static SystemCommands.MaximizeWindowCommand}" Style="{StaticResource WindowChromeRestoreButton}" FontFamily="{StaticResource Segoe MDL2 Assets}" FontSize="11" />
                    <Button Command="{x:Static SystemCommands.CloseWindowCommand}" Style="{StaticResource WindowChromeCloseButton}" FontFamily="{StaticResource Segoe MDL2 Assets}" FontSize="11" Content="&#xE8BB;" />
                </StackPanel>
            </Grid>

            <Grid Grid.Row="2" Grid.Column="0" Height="40" VerticalAlignment="Top" Background="{StaticResource ViewBarBackgroundBrush}">

            </Grid>
        </Grid>
    </Border>

    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="0" CornerRadius="0" CaptionHeight="38" UseAeroCaptionButtons="False" ResizeBorderThickness="5" NonClientFrameEdges="None" />
    </WindowChrome.WindowChrome>
</Window>